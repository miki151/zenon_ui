
export import "ui.znn";
import "pretty_input.znn";
import "std/io.znn";

template <T> requires (T == margins || T == fill || T == label || T == texture || T == position || T == button
    || T == frame  || T == key_handler || T == text_ui || T == horizontal_bar_ui || T == colored_text_ui)
bool round_brackets(pretty_dummy_struct<T>) {
  return true;
}

export void register_ui_elems(input_stream mutable* stream) {
  stream->add_concept_mapping<UIElement, margins>();
  stream->add_concept_mapping<UIElement, fill>();
  stream->add_concept_mapping<UIElement, label>();
  stream->add_concept_mapping<UIElement, text_ui>("text");
  stream->add_concept_mapping<UIElement, colored_text_ui>("colored_text");
  stream->add_concept_mapping<UIElement, texture>();
  stream->add_concept_mapping<UIElement, position>();
  stream->add_concept_mapping<UIElement, list_ui>("list");
  stream->add_concept_mapping<UIElement, button>();
  stream->add_concept_mapping<UIElement, key_handler>();
  stream->add_concept_mapping<UIElement, frame>();
  stream->add_concept_mapping<UIElement, using_ui>("using");
  stream->add_concept_mapping<UIElement, width_ui>("width");
  stream->add_concept_mapping<UIElement, height_ui>("height");
  stream->add_concept_mapping<UIElement, consume_events>();
  stream->add_concept_mapping<UIElement, horizontal_bar_ui>("horibar");
  stream->add_concept_default_mapping<UIElement, chain>();
}

