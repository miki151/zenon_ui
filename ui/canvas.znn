export import "rectangle.znn";
export import "color.znn";

export concept<T> UICanvas {
  void fillRectangle(T*, rectangle*, color*);
  void frameRectangle(T*, rectangle*, color*, int width);
  void drawLine(T*, vec2, vec2, color*);
  void drawCircle(T*, vec2, int, color*);
  void drawTexture(T*, rectangle*, vec2?, string, color*);
  void drawTextureRotated(T*, rectangle*, string, double, color*);
  vec2 getTextureSize(T*, string);
  void drawText(T*, vec2, string, int, color*);
  void drawRotatedText(T*, vec2, string, int, color*, double angle);
  vec2 getTextSize(T*, string, int);
  void setClipboard(T*, string);
  string getClipboard(T*);
  vec2 getSize(T*);
};

export enum ui_text_flag {
  CENTER_X,
  CENTER_Y,
  CENTER_XY,
};

export void drawText(UICanvas* c, mutable vec2 pos, string s, int size, color* col, ui_text_flag flag) {
  const sz = c^.getTextSize(s, size);
  if (flag != ui_text_flag::CENTER_Y)
    pos.x -= sz.x / 2;
  if (flag != ui_text_flag::CENTER_X)
    pos.y -= sz.y / 2;
  c^.drawText(pos, s, size, col);
}

